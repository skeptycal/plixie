#!/usr/bin/env false
###############################################################################
# .info.cfg - Source Author Information and general strings, functions,
#   and blobs.

# This information is required for script functionality ...
#       version='x.y.z'  (e.g. '0.7.2')
#       name='xxxxx'     (e.g. 'auto_ci')
#       detail='xxxxx'   (e.g. 'automatic handling of CI context')
version='1.0.0'
name='plixie'
detail="Convert macOS plist file SOURCE to the optional FORMAT requested."
badges="[![Netlify Status](https://api.netlify.com/api/v1/badges/416b8ca3-82db-470f-9adf-a6d06264ca75/deploy-status)](https://app.netlify.com/sites/mystifying-keller-ab5658/deploys)  ![Azure DevOps builds](https://img.shields.io/azure-devops/build/skeptycal0275/skeptycal/1.svg?color=blue&label=Azure%20DevOps&style=popout) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/flask.svg?color=Yellow&label=Python&style=popout) ![Twitter Follow](https://img.shields.io/twitter/follow/skeptycal.svg?label=%40skeptycal&style=social) ![GitHub followers](https://img.shields.io/github/followers/skeptycal.svg?style=social)"
description="$name : $detail (version $version)"
author='Michael Treanor  <skeptycal@gmail.com>'
copyright='2019 (c) Michael Treanor'
license='MIT <https://opensource.org/licenses/MIT>'
github='https://www.github.com/skeptycal'
portfolio='https://www.skeptycal.com'
twitter='https://www.twitter.com/skeptycal'

generic_usage="###############################################################################
# $description
#
# author    - $author
# copyright - $copyright
# license   - $license
# github    - $github
#
# NAME
#     $name - convert plist files

# SYNOPSIS
#     $name SOURCE [FORMAT] [MINE]

# DESCRIPTION
#     Convert macOS plist file SOURCE to the optional FORMAT requested. The
#     default format is xml1. If the file is already in the requested format,
#     nothing is done. If the format requested is available, the file is
#     translated and a copy is written with a new extension that reflects the
#     new format.

#     SOURCE - existing plist file
#     FORMAT - optional {xml1 | binary1 | json}
#         format in macOS naming format (default is xml1)
#     MINE - set to 'mine' to retain (non-sudo) ownership of the
#         new file (default is current owner) (rarely needed)

#     note: As tested, it is not possible to use a json file as *input*.

"
###############################################################################
# Specific utility and CI blurbs:

# #########  pre-commit #########
# pre-commit specific usage
program_usage="
$generic_usage
"
# pre-commit specific instructions
program_instructions="$program_usage
###############################################################################

"
# Sample template used if none is found in a new pre-commit install
# reference: https://github.com/hootsuite/pre-commit-php
sample_settings_template=$program_instructions'
# Pre-commit Sample yaml template
default_language_version:
    python: python3.7
default_stages: [commit, push]
exclude: "^$"
fail_fast: false
# @see http://pre-commit.com/
repos:
    - repo: git://github.com/pre-commit/pre-commit-hooks
      sha: master
      hooks:
          - id: check-yaml
            files: \.(yaml|yml)$
          - id: check-added-large-files
          - id: check-byte-order-marker
          - id: check-docstring-first
          - id: check-case-conflict
          - id: check-json
          - id: check-merge-conflict
          - id: check-symlinks
          #   -   id: detect-aws-credentials
          - id: detect-private-key
          - id: end-of-file-fixer
          # - id: flake8
            # args: [--max-line-length=79]
          # - id: pretty-format-json
          - id: requirements-txt-fixer
          - id: trailing-whitespace
    # Python settings ... replace as needed
    # - repo: git://github.com/pre-commit/mirrors-pylint
    #   sha: master
    #   hooks:
    #       - id: pylint
'

# Travis CI yml
travis_yml='# Travis CI scripts (python, php)
language: minimal
# # Python script (other languages are at the end.)
 language: python
# python:
#   - "2.7"
   - "3.7"

# # command to install dependencies
# install:
#   # Default ...
#   # - pip install -r requirements.txt
#   # - pip install .

#   # Specific ...
#   - pip install -e .
#   # Limit setuptools as some newer versions have Issues(tm). This needs doing
#   # as its own step; trying to do it via requirements.txt isn''t always
#   # sufficient.
#   - pip install "setuptools<34"
#   # Dev requirements
#   # TODO: follow invoke and split it up a bit so we''re not pulling down
#   # conflicting or unused-by-travis deps?
#   - pip install -r dev-requirements.txt
# # command to run tests
# script: pytest
# after_success:
#   # Upload coverage data to codecov
#   - codecov
#   email: skeptycal@gmail.com
'

###############################################################################
# References:
# automating pre-commit hooks for Git and GitHub
#
# instructions found on https://github.com/pre-commit/pre-commit/issues/366

# Correct solution from this post:

# Author: Tom Hensel (https://github.com/gretel)

# The value of sha should not be master or HEAD. Either one will only match
# the latest version at install time and prevent subsequent auto updates. On
# GitHub, the id of the most recent commit can be looked up easily (i.e.
# commit/master).

# Alternatively, setting sha to master and running pre-commit autoupdate
# before anything else will automatically populate the values of the sha keys
# in the configuration file. Example:
# -   repo: meta
#     - hooks:
#       - id: check-hooks-apply, check-useless-excludes, identity
# -   repo: git://github.com/pre-commit/pre-commit-hooks
#     sha: master #* <-- These lines are what is needed
#     hooks:
#     -   id: check-added-large-files
# ...
#     -   id: trailing-whitespace
# -   repo: git://github.com/pre-commit/mirrors-pylint
#     sha: master #* <-- These lines are what is needed
#     hooks:
#     -   id: pylint

# Running `pre-commit autoupdate` updates this to:

# -   repo: git://github.com/pre-commit/pre-commit-hooks
#     sha: 35548254adb636ce52b5574eb1904b8c795b673e # * <-- something similar
#     hooks:
#     -   id: check-added-large-files
# ...
#     -   id: trailing-whitespace
# -   repo: git://github.com/pre-commit/mirrors-pylint
#     sha: 4de6c8dfadef1a271a814561ce05b8bc1c446d22 # * <-- something similar
#     hooks:
#     -   id: pylint

#* #############################################################################
#* fake_colors : polyfill for basic_text_colors

fake_colors() {
    MAIN='\e[38;5;229m'
    RESET='\e[0m'
    fake="/tmp/.fake.tmp"
    touch $fake
    chmod 775 $fake
    echo "#\!/usr/bin/env bash
    ###############################################################################
    # fake_colors : polyfill for basic_text_colors
    # usage:    source \"./.fake.tmp\"

    # author    - Michael Treanor  <skeptycal@gmail.com>
    # copyright - 2019 (c) Michael Treanor
    # license   - MIT <https://opensource.org/licenses/MIT>
    # github    - https://www.github.com/skeptycal
    ############################################################################
    MAIN='\\''e[38;5;229m'
    RESET='\\''e[0m'

    ce() {
        color_code=\"\$1\" && shift || return
        echo \"\${color_code}\${@}\${RESET}\"
    }
    " >$fake

    # actual colors were: main (bold), warn (red), blue, green, orange, purple
    # all colors replaced with main (bold)
    for i in {me,we,be,ge,oe,pe}; do
      echo "${i}() {\n ce '\\e[38;5;229m' \${@}\n}\n" >>$fake
    done;
    unset i
    source $fake
    # get rid of temp file after use ...
    rm -rf $fake
    echo "${MAIN}Ugly Warning${RESET}:"
    echo "\t<basic_text_colors> module not found ..."
    echo "\tusing ${MAIN}generic BOLD color${RESET} instead."
}
function finish {
  rm -rf "$fake"
}
trap finish EXIT
